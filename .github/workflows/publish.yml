# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Test, Build, Publish

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Get Spring Common Configuration Source Code
      uses: actions/checkout@v3
      with:
        ssh-key: ${{ secrets.SPRING_COMMON_DEPLOY_KEY }}
        repository: morriswa/spring-common
        path: './common'
        ref: v3.0.4

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'corretto'
        cache: maven

    - name: Build Common Configuration with Maven
      run: |
        cd ./common
        mvn clean install

    - name: Build and Run Tests with Maven
      run: |
        mvn -DskipTests -B package --file pom.xml 
        mkdir ~/output 
        cp -a target/. ~/output/target/
        cp Dockerfile ~/output/
        
    - name: Extract project version
      run: echo "version=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT
      id: project

    - name: Login to Docker
      uses: docker/login-action@v2
      with:
        username: morriswa
        password: ${{ secrets.DOCKERPASSWORD }}
      
    - name: Build and Publish to Docker Hub
      run: |
        cd ~/output
        docker build . -t morriswa/task-app-api:${{ steps.project.outputs.version }}
        docker push morriswa/task-app-api:${{ steps.project.outputs.version }}
